name: Build and publish docker images
on:
    push:
        branches: ["main"]
        tags: ["v*.*.*"]
    pull_request:
        branches: ["main"]

env:
    REGISTRY: ghcr.io
    UV_VERSION: 0.7
    PYTHON_VERSION: 3.12
    JUPYTER_VERSION: "2025-04-14"

permissions:
    packages: write
    attestations: write

jobs:
    build:
        name: Build Docker Image
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                service:
                    - jupyter
                include:
                    - service: jupyter
                      target: jupyter
                      image_suffix: /jupyter
        steps:
            - uses: actions/checkout@v4
              with:
                  ref: ${{ github.head_ref || github.ref_name }}
                  submodules: true
            - uses: docker/setup-buildx-action@v3

            - uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Extract Docker metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ github.repository }}${{ matrix.image_suffix }}
            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: ./north_notebook
                  build-args: |
                      UV_VERSION=${{ env.UV_VERSION }}
                      PYTHON_VERSION=${{ env.PYTHON_VERSION }}
                      JUPYTER_VERSION=${{ env.JUPYTER_VERSION }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  target: ${{ matrix.target }}
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
            - name: Set image output
              run: |
                  FIRST_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n1)
                  echo "${{ matrix.service }}_IMAGE=$FIRST_TAG" >> $GITHUB_ENV
                  echo "## Read the tags, version, labels output variables"
                  echo "IMAGE: $FIRST_TAG"
                  echo "VERSION: ${{ steps.meta.outputs.version }}"
                  echo "LABELS: ${{ steps.meta.outputs.labels }}"
